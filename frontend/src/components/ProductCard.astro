---
interface Props {
  title?: string;
  price?: number;
  imageUrl?: string; // Ruta de la imagen del producto
  discountPercentage?: number; // Porcentaje de descuento opcional
}

// Definimos valores por defecto si no se pasan las propiedades
const {
  title = 'Nombre del Producto',
  price = 0.00,
  imageUrl = '/src/assets/placeholder-image.jpg', // Usará esta imagen si no le das una
  discountPercentage,
} = Astro.props;

// Lógica para calcular el precio con descuento
const hasDiscount = discountPercentage !== undefined && discountPercentage > 0;
const discountedPrice = hasDiscount ? price * (1 - discountPercentage / 100) : undefined;
---

<div class="group bg-white rounded-xl shadow-lg overflow-hidden transform transition-transform duration-300 hover:scale-105 hover:shadow-2xl">
  <div class="relative">
    <img src={imageUrl} alt={title} class="w-full h-64 object-cover transition-transform group-hover:scale-105 duration-300" loading="lazy">

    {hasDiscount && (
      <div class="absolute top-2 left-2 bg-red-500 text-white text-xs font-bold rounded-full px-2 py-1 z-10">
        -{discountPercentage}%
      </div>
    )}

    <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-0 group-hover:opacity-60 transition-opacity duration-300"></div>

    <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
      <button class="bg-blue-500 text-white py-2 px-6 rounded-lg hover:bg-blue-600 transition-colors duration-200 text-base font-semibold focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
        Ver Detalles
      </button>
    </div>
  </div>

  <div class="p-4 sm:p-6">
    <h3 class="text-lg sm:text-xl font-semibold text-gray-900 truncate mb-2">{title}</h3>

    <div class="flex items-center justify-between">
      <div>
        {hasDiscount && discountedPrice !== undefined ? (
          <>
            <span class="text-gray-500 line-through text-base sm:text-lg">${price.toFixed(2)}</span>
            <span class="text-red-600 font-bold ml-2 text-xl sm:text-2xl">${discountedPrice.toFixed(2)}</span>
          </>
        ) : (
          <span class="text-gray-700 font-semibold text-xl sm:text-2xl">${price.toFixed(2)}</span>
        )}
      </div>

      <button class="bg-blue-600 text-white p-3 rounded-full hover:bg-blue-700 transition-colors duration-200 shadow-md">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 10.5V6a3.75 3.75 0 1 0-7.5 0v4.5m11.356-1.993 1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 0 1-1.12-1.243l1.264-12A1.125 1.125 0 0 1 5.513 7.5h12.974c.576 0 1.059.435 1.119 1.007ZM8.625 10.5a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm7.5 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
        </svg>
      </button>
    </div>
  </div>
</div>